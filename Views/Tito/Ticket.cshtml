@model TicketViewModel

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="/css/ticket.css" type="text/css">
    <title>Ticket</title>
</head>
<body>
    <section class="ticket">
        <section class="personalData">
            <section class="fullName">
                <section class="firstName">
                    @Model.FirstName
                </section>
                <section class="lastName">
                    @Model.LastName
                </section>
            </section>
            <section class="company">
                Company: @Model.CompanyName
            </section>
            <section class="tag">
                Type: @Model.Tags
            </section>
        </section>
        @if (!String.IsNullOrEmpty(Model.VCard))
        {
            <section class="vCard">
                vCard:
                <img src="data:image/png;base64,@Model.VCard" alt="VCard" />
            </section>
        }
    </section>
    <!-- Assign an id to the button for easier selection -->
    <button class="printBtn" onclick="printPage()">Print</button>
    @*  <div id="printerDiv" style="display:none"></div> *@
    <script>
        function printPage() {

            window.onafterprint = function () {
                // Redirect after printing
                setTimeout(function () {
                    window.location.href = "@Url.Action("Index", "Home")";
                }, 7000);
            };
            // Trigger the print dialog
            window.print();
        }
    </script>

    @*  <script>
    // Attach event listener to the button
    debugger;
    document.getElementById("printButton").addEventListener("click", function () {
    debugger;
    var printerName = getCookie("PrinterName");
    var model = @Json.Serialize(Model);
    printDocument(getCookie("PrinterName"), @Html.Raw(Json.Serialize(Model)));
    });

    // Function to get cookie value
    function getCookie(name) {
    const value = `; ${document.cookie}`;
    const parts = value.split(`; ${name}=`);
    if (parts.length === 2) {
    let result = parts.pop().split(';').shift();
    return result;
    }
    }

    // Function to send a request to print the document
    function printDocument(printerName, documentContent) {
    const data = {
    printerName: printerName,
    documentContent: documentContent
    };

    fetch('/Printer/Print', {
    method: 'POST',
    headers: {
    'Content-Type': 'application/json'
    },
    body: JSON.stringify(data)
    })
    .then(response => {
    // Handle response from backend
    })
    .catch(error => {
    console.error('Error:', error);
    });
    }
    </script> *@
</body>
</html>
