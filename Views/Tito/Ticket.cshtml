@model TicketViewModel

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Ticket</title>
</head>
<body>
    <div class="nav-item">
        <a class="text-monospace">First Name: @Model.FirstName</a>
    </div>
    <br />
    <div class="nav-item">
        <a class="text-monospace">Last Name: @Model.LastName</a>
    </div>
    <br />
    <div class="nav-item">
        <a class="text-monospace">Company: @Model.CompanyName</a>
    </div>
    <br />
    <div class="nav-item">
        <a class="text-monospace">Tag: @Model.Tags</a>
    </div>
    <br />

    <!-- Assign an id to the button for easier selection -->
    <button id="printButton">Print</button>

    <script>
        // Attach event listener to the button
        debugger;
        document.getElementById("printButton").addEventListener("click", function () {
            debugger;
            var printerName = getCookie("PrinterName");
            var model = @Json.Serialize(Model);
            printDocument(getCookie("PrinterName"), @Html.Raw(Json.Serialize(Model)));
        });

        // Function to get cookie value
        function getCookie(name) {
            const value = `; ${document.cookie}`;
            const parts = value.split(`; ${name}=`);
            if (parts.length === 2) {
                let result = parts.pop().split(';').shift();
                return result;
            }
        }

        // Function to send a request to print the document
        function printDocument(printerName, documentContent) {
            const data = {
                printerName: printerName,
                documentContent: documentContent
            };

            fetch('/Printer/Print', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(data)
            })
                .then(response => {
                    // Handle response from backend
                })
                .catch(error => {
                    console.error('Error:', error);
                });
        }
    </script>
</body>
</html>
