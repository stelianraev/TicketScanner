<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Check-In</title>
    <script src="https://unpkg.com/jsqr/dist/jsQR.js"></script>
</head>
<body>
    <video id="video" style="display:none;"></video>
    <canvas id="canvas" style="display:none;"></canvas>

    <script type="module">
        window.addEventListener('DOMContentLoaded', () => {
            scan();
        });

        function getCookie(name) {
            const value = `; ${document.cookie}`;
            const parts = value.split(`; ${name}=`);
            if (parts.length === 2) return parts.pop().split(';').shift();
        }

        async function scan() {
            const video = document.getElementById('video');
            const canvas = document.getElementById('canvas');
            const context = canvas.getContext('2d');
            const displaySize = { width: 300, height: 200 };

            canvas.width = displaySize.width;
            canvas.height = displaySize.height;

            try {
                video.style.display = 'block';
                //canvas.style.display = 'block';

                //get camera from coockies setted in Admin Controller
                var constraints = { video: { exact: getCookie("SelectedCameraId") } };

                const stream = await navigator.mediaDevices.getUserMedia({
                    video: { constraints } // Use the front camera
                });

                video.srcObject = stream;
                video.play();

                decodeQRCode(video, canvas, context);
            } catch (error) {
                console.error("Error accessing the camera", error);
                alert('Error accessing the camera.');
            }
        }

        function decodeQRCode(video, canvas, context) {
            const scan = () => {
                context.drawImage(video, 0, 0, canvas.width, canvas.height);
                const imageData = context.getImageData(0, 0, canvas.width, canvas.height);
                const code = jsQR(imageData.data, imageData.width, imageData.height);

                if (code) {
                    console.log("Found QR code", code.data);
                    video.srcObject.getTracks().forEach(track => track.stop());
                    video.style.display = 'none';
                    canvas.style.display = 'none';
                    alert('QR Code data: ' + code.data);
                    sendDataToServer(code.data);
                    // You can handle the QR code data here, e.g., redirecting to a URL or making a server request
                } else {
                    requestAnimationFrame(scan); // Keep scanning
                }
            };

            requestAnimationFrame(scan);
        }

        function sendDataToServer(data) {
            // Send data to server using Fetch API
            fetch('/Ticket/Ticket', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ qrCodeData: data })
            })
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Network response was not ok');
                    }
                    // Handle successful response here
                })
                .catch(error => {
                    console.error('There was a problem with the fetch operation:', error);
                });
        }
    </script>
</body>
</html>
