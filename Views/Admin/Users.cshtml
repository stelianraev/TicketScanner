@using CheckIN.Models.Enums
@model UsersFormModel

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>AdminPanel</title>
    <link rel="stylesheet" href="/css/admin/adminDashboard.css" type="text/css">
</head>
<body>
    <text>Event: @Model.SelectedEvent</text>
    <section class="adminPage">
        <aside class="adminBar">
            <a href="/Admin/AdminSettings">Settings</a>
            <a href="/Admin/Events">Events</a>
            <a href="/Admin/Tickets">Tickets</a>
            <a href="/Admin/Users">Users</a>
            <a href="/Admin/CheckIn">CheckIn</a>
            <a href="/Admin/Analytics">Analytics</a>
        </aside>

        <section class="admin">
            <h1>Users</h1>

            <form asp-action="UserRegistration" asp-controller="Account" method="post" enctype="multipart/form-data">
                <section class="adminSettings">
                    <div class="form-group">
                        <label for="Email">Email:</label>
                        <input asp-for="NewUser.Email" class="form-control">
                        <span asp-validation-for="NewUser.Email" class="small text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label for="Password">Password:</label>
                        <input asp-for="NewUser.Password" class="form-control">
                        <span asp-validation-for="NewUser.Password" class="small text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label for="NewUser_Permissions">Permission:</label>
                        @foreach (var permission in Enum.GetValues(typeof(Permission)).Cast<Permission>().Skip(1))
                        {
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" id="permission_@permission"
                                       name="NewUser.Permissions" value="@permission"
                                @(Model.NewUser.Permissions != null && Model.NewUser.Permissions.Contains(permission) ? "checked" : "") />
                                <label class="form-check-label" for="permission_@permission">
                                    @permission
                                </label>
                            </div>
                        }
                        <span asp-validation-for="NewUser.Permissions" class="small text-danger"></span>
                    </div>

                    <div id="ticketsDiv" class="form-group">
                        <label for="NewUser_TicketType">Ticket Type:</label>
                        @foreach (var ticketType in Model.TicketTypeList)
                        {
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" id="ticketType_@ticketType.Value"
                                       name="NewUser.SelectedTicketTypesPermission[]" value="@ticketType.Value"
                                @(Model.NewUser.SelectedTicketTypesPermission != null && Model.NewUser.SelectedTicketTypesPermission.Contains(ticketType.Value) ? "checked" : "") />
                                <label class="form-check-label" for="ticketType_@ticketType.Value">
                                    @ticketType.Text
                                </label>
                            </div>
                        }
                        <span asp-validation-for="NewUser.SelectedTicketTypesPermission" class="small text-danger"></span>
                    </div>
                </section>

                <button id="save" type="submit">Add User</button>
            </form>

            <div class="table-container">
                <table>
                    @if (Model.Users.Any())
                    {
                        <tr>
                            <th>Email</th>
                            <th>Permission</th>
                            <th>Tickets Permissions</th>
                            <th>Edit</th>
                        </tr>

                        @foreach (UserFormModel user in Model.Users)
                        {
                            <tr>
                                <td>@user.Email</td>
                                <td>@Html.Raw(string.Join("<br>", user.Permissions))</td>
                                <td>@Html.Raw(string.Join("<br>", user.TicketTypesPermission))</td>
                                <td>
                                    <a asp-action="EditUser" asp-controller="Account" asp-route-id="@user.Id" class="btn btn-primary">Edit</a>
                                </td>
                            </tr>
                        }
                    }
                    else
                    {
                        <p>No Users</p>
                    }
                </table>
            </div>
        </section>

        <script>
            document.addEventListener('DOMContentLoaded', function () {
                var adminCheckbox = document.getElementById('permission_Administrator');
                var checkerCheckbox = document.getElementById('permission_Checker');
                var scannerCheckbox = document.getElementById('permission_Scanner');

                function enforceSelectionRules() {
                    if (adminCheckbox.checked) {
                        checkerCheckbox.checked = false;
                        scannerCheckbox.checked = false;
                        checkerCheckbox.disabled = true;
                        scannerCheckbox.disabled = true;
                    } else {
                        checkerCheckbox.disabled = false;
                        scannerCheckbox.disabled = false;
                    }

                    if (checkerCheckbox.checked || scannerCheckbox.checked) {
                        adminCheckbox.checked = false;
                        adminCheckbox.disabled = true;
                    } else {
                        adminCheckbox.disabled = false;
                    }
                }

                adminCheckbox.addEventListener('change', enforceSelectionRules);
                checkerCheckbox.addEventListener('change', enforceSelectionRules);
                scannerCheckbox.addEventListener('change', enforceSelectionRules);

                enforceSelectionRules(); // Initial call to set the correct state
            });
        </script>
    </section>
</body>
</html>